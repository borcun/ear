<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_e_a_r_1_1_communication_1_1_network_manager" xml:lang="en-US">
<title>EAR::Communication::NetworkManager Class Reference</title>
<indexterm><primary>EAR::Communication::NetworkManager</primary></indexterm>
<para>

<para>network manager class that storing and conduction two types of endpoints </para>
 
</para>
<para>
<computeroutput>#include &lt;network_manager.h&gt;</computeroutput>
</para>
Collaboration diagram for EAR::Communication::NetworkManager:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_e_a_r_1_1_communication_1_1_network_manager__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1aacb5ae22df1ce634567b0af3c6d812e2">NetworkManager</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1a97a3b09b80d7a422a97ca918aa5901b7">~NetworkManager</link> ()</para>

<para>destructor </para>
</listitem>
            <listitem><para>std::string <link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1aef0ccaf6542cde8fd9e047f714671215">getName</link> (void) const</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1a863a99b6519be9c43e7798eae327cfb4">initialize</link> (const <link linkend="_class_e_a_r_1_1_communication_1_1_configuration">Configuration</link> &amp;config)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1ab0263362ca65a0b11dc51f86850c40b1">terminate</link> (void)</para>

<para>function that terminates network manager </para>
</listitem>
            <listitem><para><link linkend="_class_e_a_r_1_1_communication_1_1_receiver">Receiver</link> * <link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1a3e7c6cdf4abc02c774b1b4fcb18c8cca">getReceiver</link> (void)</para>
</listitem>
            <listitem><para><link linkend="_class_e_a_r_1_1_communication_1_1_transmitter">Transmitter</link> * <link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1adf0e55322578f639cfe3b64cf63e31e5">getTransmitter</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1aed8c136d19a7d62d7b1f340a4269035f">m_is_init</link> = false</para>

<para>initialization flag </para>
</listitem>
            <listitem><para><link linkend="_class_e_a_r_1_1_communication_1_1_receiver">Receiver</link> * <link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1a431871c2dcdfe796c4b451d9879e89f4">m_receiver</link> = nullptr</para>
</listitem>
            <listitem><para>std::list&lt; <link linkend="_class_e_a_r_1_1_communication_1_1_transmitter">Transmitter</link> * &gt; <link linkend="_class_e_a_r_1_1_communication_1_1_network_manager_1aec21a8a4517e76362ac7d8d6f69fa81f">m_transmitters</link></para>

<para>many client (transmitter) instance </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>network manager class that storing and conduction two types of endpoints </para>
<para>
Definition at line <link linkend="_network__manager_8h_source_1l00018">18</link> of file <link linkend="_network__manager_8h_source">network_manager.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1aacb5ae22df1ce634567b0af3c6d812e2"/><section>
    <title>NetworkManager()</title>
<indexterm><primary>NetworkManager</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>NetworkManager</secondary></indexterm>
<para><computeroutput>EAR::Communication::NetworkManager::NetworkManager (const std::string &amp; name)<computeroutput>[explicit]</computeroutput></computeroutput></para>
<para>constructor 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>name</entry><entry>
<para>- network manager name </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_network__manager_8cpp_source_1l00003">3</link> of file <link linkend="_network__manager_8cpp_source">network_manager.cpp</link>.</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1a97a3b09b80d7a422a97ca918aa5901b7"/><section>
    <title>~NetworkManager()</title>
<indexterm><primary>~NetworkManager</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>~NetworkManager</secondary></indexterm>
<para><computeroutput>EAR::Communication::NetworkManager::~NetworkManager ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>destructor </para>
</para>
<para>
Definition at line <link linkend="_network__manager_8cpp_source_1l00009">9</link> of file <link linkend="_network__manager_8cpp_source">network_manager.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1aef0ccaf6542cde8fd9e047f714671215"/><section>
    <title>getName()</title>
<indexterm><primary>getName</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>getName</secondary></indexterm>
<para><computeroutput>std::string EAR::Communication::NetworkManager::getName (void ) const</computeroutput></para>
<para>function that gets network manager name <formalpara><title>Returns</title>

<para>name of network manager </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_network__manager_8cpp_source_1l00014">14</link> of file <link linkend="_network__manager_8cpp_source">network_manager.cpp</link>.</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1a3e7c6cdf4abc02c774b1b4fcb18c8cca"/><section>
    <title>getReceiver()</title>
<indexterm><primary>getReceiver</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>getReceiver</secondary></indexterm>
<para><computeroutput><link linkend="_class_e_a_r_1_1_communication_1_1_receiver">EAR::Communication::Receiver</link> * EAR::Communication::NetworkManager::getReceiver (void )</computeroutput></para>
<para>function that gets network server/receiver <formalpara><title>Returns</title>

<para>receiver endpoint that is server </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_network__manager_8cpp_source_1l00054">54</link> of file <link linkend="_network__manager_8cpp_source">network_manager.cpp</link>.</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1adf0e55322578f639cfe3b64cf63e31e5"/><section>
    <title>getTransmitter()</title>
<indexterm><primary>getTransmitter</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>getTransmitter</secondary></indexterm>
<para><computeroutput><link linkend="_class_e_a_r_1_1_communication_1_1_transmitter">EAR::Communication::Transmitter</link> * EAR::Communication::NetworkManager::getTransmitter (void )</computeroutput></para>
<para>function that creates network client/transmitter <formalpara><title>Returns</title>

<para>transmitter endpoint that is client </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_network__manager_8cpp_source_1l00058">58</link> of file <link linkend="_network__manager_8cpp_source">network_manager.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_e_a_r_1_1_communication_1_1_network_manager_adf0e55322578f639cfe3b64cf63e31e5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1a863a99b6519be9c43e7798eae327cfb4"/><section>
    <title>initialize()</title>
<indexterm><primary>initialize</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>initialize</secondary></indexterm>
<para><computeroutput>bool EAR::Communication::NetworkManager::initialize (const <link linkend="_class_e_a_r_1_1_communication_1_1_configuration">Configuration</link> &amp; config)<computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>function that initializes network manager 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>config</entry><entry>
<para>- network manager configuration </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true if initialization is done, false otherwise </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_network__manager_8cpp_source_1l00018">18</link> of file <link linkend="_network__manager_8cpp_source">network_manager.cpp</link>.</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1ab0263362ca65a0b11dc51f86850c40b1"/><section>
    <title>terminate()</title>
<indexterm><primary>terminate</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>terminate</secondary></indexterm>
<para><computeroutput>void EAR::Communication::NetworkManager::terminate (void )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>function that terminates network manager </para>
</para>
<para>
Definition at line <link linkend="_network__manager_8cpp_source_1l00036">36</link> of file <link linkend="_network__manager_8cpp_source">network_manager.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1aed8c136d19a7d62d7b1f340a4269035f"/><section>
    <title>m_is_init</title>
<indexterm><primary>m_is_init</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>m_is_init</secondary></indexterm>
<para><computeroutput>bool EAR::Communication::NetworkManager::m_is_init = false<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>initialization flag </para>
</para>
<para>
Definition at line <link linkend="_network__manager_8h_source_1l00043">43</link> of file <link linkend="_network__manager_8h_source">network_manager.h</link>.</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1a431871c2dcdfe796c4b451d9879e89f4"/><section>
    <title>m_receiver</title>
<indexterm><primary>m_receiver</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>m_receiver</secondary></indexterm>
<para><computeroutput><link linkend="_class_e_a_r_1_1_communication_1_1_receiver">Receiver</link>* EAR::Communication::NetworkManager::m_receiver = nullptr<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_network__manager_8h_source_1l00045">45</link> of file <link linkend="_network__manager_8h_source">network_manager.h</link>.</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_network_manager_1aec21a8a4517e76362ac7d8d6f69fa81f"/><section>
    <title>m_transmitters</title>
<indexterm><primary>m_transmitters</primary><secondary>EAR::Communication::NetworkManager</secondary></indexterm>
<indexterm><primary>EAR::Communication::NetworkManager</primary><secondary>m_transmitters</secondary></indexterm>
<para><computeroutput>std::list&lt;<link linkend="_class_e_a_r_1_1_communication_1_1_transmitter">Transmitter</link> *&gt; EAR::Communication::NetworkManager::m_transmitters<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>many client (transmitter) instance </para>
</para>
<para>
Definition at line <link linkend="_network__manager_8h_source_1l00047">47</link> of file <link linkend="_network__manager_8h_source">network_manager.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/comm/<link linkend="_network__manager_8h">network_manager.h</link>src/comm/<link linkend="_network__manager_8cpp">network_manager.cpp</link></section>
</section>
