<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_e_a_r_1_1_communication_1_1_transmitter" xml:lang="en-US">
<title>EAR::Communication::Transmitter Class Reference</title>
<indexterm><primary>EAR::Communication::Transmitter</primary></indexterm>
<para>
<computeroutput>#include &lt;transmitter.h&gt;</computeroutput>
</para>
Inheritance diagram for EAR::Communication::Transmitter:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_e_a_r_1_1_communication_1_1_transmitter__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for EAR::Communication::Transmitter:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_e_a_r_1_1_communication_1_1_transmitter__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_e_a_r_1_1_communication_1_1_transmitter_1a5528115a11dae1a35a66ed73ba889d81">Transmitter</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para>virtual <link linkend="_class_e_a_r_1_1_communication_1_1_transmitter_1ad3bb3ea5c2fa853b00d43dc6e4b8e8ce">~Transmitter</link> ()</para>
</listitem>
            <listitem><para>virtual bool <link linkend="_class_e_a_r_1_1_communication_1_1_transmitter_1a5a66e95d2f98df0ff77ceb310e7ee5ae">initialize</link> (const <link linkend="_class_e_a_r_1_1_communication_1_1_configuration">Configuration</link> &amp;config) override</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_e_a_r_1_1_communication_1_1_transmitter_1a3258c8cc80d3d2034c6da64972f534fd">shutdown</link> () override</para>

<para>function that shutdowns endpoint </para>
</listitem>
            <listitem><para>int32_t <link linkend="_class_e_a_r_1_1_communication_1_1_transmitter_1aa39396edbede01b955d99adef584397a">send</link> (const char *buf)</para>
</listitem>
            <listitem><para>int32_t <link linkend="_class_e_a_r_1_1_communication_1_1_transmitter_1acdf43af3056c4c08fa3134a8814c646e">send</link> (const void *buf, size_t size)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_transmitter_8h_source_1l00016">16</link> of file <link linkend="_transmitter_8h_source">transmitter.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_transmitter_1a5528115a11dae1a35a66ed73ba889d81"/><section>
    <title>Transmitter()</title>
<indexterm><primary>Transmitter</primary><secondary>EAR::Communication::Transmitter</secondary></indexterm>
<indexterm><primary>EAR::Communication::Transmitter</primary><secondary>Transmitter</secondary></indexterm>
<para><computeroutput>EAR::Communication::Transmitter::Transmitter (const std::string &amp; name)<computeroutput>[explicit]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_transmitter_8cpp_source_1l00006">6</link> of file <link linkend="_transmitter_8cpp_source">transmitter.cpp</link>.</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_transmitter_1ad3bb3ea5c2fa853b00d43dc6e4b8e8ce"/><section>
    <title>~Transmitter()</title>
<indexterm><primary>~Transmitter</primary><secondary>EAR::Communication::Transmitter</secondary></indexterm>
<indexterm><primary>EAR::Communication::Transmitter</primary><secondary>~Transmitter</secondary></indexterm>
<para><computeroutput>EAR::Communication::Transmitter::~Transmitter ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_transmitter_8cpp_source_1l00012">12</link> of file <link linkend="_transmitter_8cpp_source">transmitter.cpp</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_transmitter_1a5a66e95d2f98df0ff77ceb310e7ee5ae"/><section>
    <title>initialize()</title>
<indexterm><primary>initialize</primary><secondary>EAR::Communication::Transmitter</secondary></indexterm>
<indexterm><primary>EAR::Communication::Transmitter</primary><secondary>initialize</secondary></indexterm>
<para><computeroutput>bool EAR::Communication::Transmitter::initialize (const <link linkend="_class_e_a_r_1_1_communication_1_1_configuration">Configuration</link> &amp; config)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para>
<para>function that initializes endpoint 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>config</entry><entry>
<para>- endpoint configuration </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true if endpoint is initialized, otherwise false </para>
</formalpara>
</para>
<para>
Implements <link linkend="_class_e_a_r_1_1_communication_1_1_endpoint_1ad2e4e4b506c867eebe974fe6d34bd35b">EAR::Communication::Endpoint</link>.</para>
<para>
Definition at line <link linkend="_transmitter_8cpp_source_1l00016">16</link> of file <link linkend="_transmitter_8cpp_source">transmitter.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_e_a_r_1_1_communication_1_1_transmitter_a5a66e95d2f98df0ff77ceb310e7ee5ae_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_transmitter_1aa39396edbede01b955d99adef584397a"/><section>
    <title>send()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>send</primary><secondary>EAR::Communication::Transmitter</secondary></indexterm>
<indexterm><primary>EAR::Communication::Transmitter</primary><secondary>send</secondary></indexterm>
<para><computeroutput>int32_t EAR::Communication::Transmitter::send (const char * buf)</computeroutput></para>
<para>function that send buffer to listener 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>buf</entry><entry>
<para>- buffer </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>length of data sent if succeed, otherwise errno </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_transmitter_8cpp_source_1l00066">66</link> of file <link linkend="_transmitter_8cpp_source">transmitter.cpp</link>.</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_transmitter_1acdf43af3056c4c08fa3134a8814c646e"/><section>
    <title>send()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>send</primary><secondary>EAR::Communication::Transmitter</secondary></indexterm>
<indexterm><primary>EAR::Communication::Transmitter</primary><secondary>send</secondary></indexterm>
<para><computeroutput>int32_t EAR::Communication::Transmitter::send (const void * buf, size_t size)</computeroutput></para>
<para>function that send buffer to listener 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>buf</entry><entry>
<para>- buffer </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>size</entry><entry>
<para>- buffer size </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>length of data sent if succeed, otherwise errno </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_transmitter_8cpp_source_1l00070">70</link> of file <link linkend="_transmitter_8cpp_source">transmitter.cpp</link>.</para>
</section>
<anchor xml:id="_class_e_a_r_1_1_communication_1_1_transmitter_1a3258c8cc80d3d2034c6da64972f534fd"/><section>
    <title>shutdown()</title>
<indexterm><primary>shutdown</primary><secondary>EAR::Communication::Transmitter</secondary></indexterm>
<indexterm><primary>EAR::Communication::Transmitter</primary><secondary>shutdown</secondary></indexterm>
<para><computeroutput>void EAR::Communication::Transmitter::shutdown ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>function that shutdowns endpoint </para>
</para>
<para>
Implements <link linkend="_class_e_a_r_1_1_communication_1_1_endpoint_1a53d7721f3e5c76ec6d8580f324b94e86">EAR::Communication::Endpoint</link>.</para>
<para>
Definition at line <link linkend="_transmitter_8cpp_source_1l00057">57</link> of file <link linkend="_transmitter_8cpp_source">transmitter.cpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/comm/<link linkend="_transmitter_8h">transmitter.h</link>src/comm/<link linkend="_transmitter_8cpp">transmitter.cpp</link></section>
</section>
